---
import { Icon } from "astro-icon/components";

interface Props {
  text: string;
  link?: string | undefined;
  variant: "primary" | "secondary";
  blank?: boolean;
  icon?: string;
}

const { text, link, variant, blank = false, icon } = Astro.props;
---

<a href={link} class={`btn btn-${variant}`} target={blank ? "_blank" : "_self"}>
  {text}
  {
    icon && (
      <span class="ml-2">
        <Icon name={icon} size={20} />
      </span>
    )
  }
</a>

<!-- TODO: Refactor this so that it uses Tailwind -->
<style>
  :root {
    --primary-color: #ff0098;
    --primary-white: #ebebeb;
    --primary-black: #111111;
  }
  .btn {
    display: inline-flex;
    width: 140px;
    height: 40px;
    justify-content: center;
    align-items: center;
    z-index: 1;
    position: relative;
    transition: all ease-in-out 300ms;
    border-radius: 1em;
  }

  .btn-primary {
    background: var(--primary-color);
    color: var(--primary-white);
    position: relative;
  }

  .btn-primary::after {
    background: var(--primary-white);
    position: absolute;
    content: "";
    left: 0;
    top: 0;
    width: 0;
    height: 100%;
    z-index: -1;
    transition: all ease-in-out 300ms;
    border-radius: 1em;
  }

  .btn-primary:hover {
    color: var(--primary-black);
    border-radius: 1em;
  }

  .btn-primary:hover::after {
    width: 100%;
    text-decoration: none;
    border-radius: 1em;
  }

  /* SECONDARY BUTTON */
  .btn-secondary {
    background: var(--primary-white);
    color: var(--primary-black);
  }

  .btn-secondary::after {
    background: var(--primary-color);
    position: absolute;
    content: "";
    left: 0;
    top: 0;
    width: 15%;
    height: 100%;
    z-index: -1;
    transition: all ease-in-out 300ms;
    border-radius: 1em 0 0 1em;
  }

  .btn-secondary:hover {
    color: var(--primary-white);
  }

  .btn-secondary:hover::after {
    width: 100%;
    text-decoration: none;
    border-radius: 1em;
  }
</style>
