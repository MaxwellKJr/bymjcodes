---
interface TextBlock {
  children: TextChild[];
}

interface TextChild {
  type: string;
  text?: string;
}

// Function to extract plain text
const extractPlainText = (documentBody: TextBlock[]): string => {
  if (!documentBody?.length) return "";

  return documentBody
    .map((block) => {
      if (!block?.children?.length) return "";
      return block.children.map((child) => child?.text || "").join(" ");
    })
    .filter((text) => text !== "")
    .join(" ");
};

// Function to estimate reading time
const estimateReadingTime = (text: string): string => {
  const wordsPerMinute = 200; // Average reading speed
  const words = text.split(/\s+/).filter(Boolean); // Count words
  const readingTime = Math.ceil(words.length / wordsPerMinute); // Round up to the nearest minute
  return `⏱️ ${readingTime} min read`;
};

// Props passed to the component
const { body } = Astro.props;

// Extract plain text and calculate reading time
const plainText = extractPlainText(body);
const readingTime = estimateReadingTime(plainText);
---

<small class="text-sm text-secondary-white my-1">{readingTime}</small>
