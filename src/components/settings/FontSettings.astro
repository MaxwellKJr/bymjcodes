---
import Icon from "node_modules/astro-icon/components/Icon.astro";
---

<div class="font-settings">
  <div class="setting-group">
    <Icon name="ri:text-snippet" class="text-2xl text-black dark:text-white" />
    <select
      id="font-family"
      class="bg-background-light dark:bg-background-dark"
    >
      <option value="serif">Serif</option>
      <option value="poppins">Sans</option>
      <option value="monospace">Monospace</option>
    </select>
  </div>

  <div class="setting-group">
    <Icon name="ri:font-size-2" class="text-2xl text-black dark:text-white" />
    <select id="text-size" class="bg-background-light dark:bg-background-dark">
      <option value="14px">0.5pt</option>
      <option value="16px">1pt</option>
      <option value="18px">1.5pt</option>
      <option value="20px">2pt</option>
    </select>
  </div>
</div>

<style>
  .font-settings {
    @apply flex w-full flex-row flex-wrap justify-end gap-4 pt-4;
  }

  .setting-group {
    @apply flex items-center justify-end gap-2;
  }

  select {
    @apply rounded-full border-[1px] border-solid border-primary px-1 py-1 hover:cursor-pointer;
  }

  label {
    @apply min-w-24;
  }
</style>

<script>
  import {
    fontSettings,
    updateFontFamily,
    updateTextSize,
    initializeFontSettings,
  } from "@/store/fontSettings";

  initializeFontSettings();

  const fontFamilySelect = document.getElementById(
    "font-family"
  ) as HTMLSelectElement;
  const textSizeSelect = document.getElementById(
    "text-size"
  ) as HTMLSelectElement;

  fontSettings.subscribe(({ fontFamily, textSize }) => {
    document.documentElement.style.setProperty("--font-family", fontFamily);
    document.documentElement.style.setProperty("--text-size", textSize);

    fontFamilySelect.value = fontFamily;
    textSizeSelect.value = textSize;
  });

  fontFamilySelect.addEventListener("change", (e) => {
    const newFont = (e.target as HTMLSelectElement).value;
    updateFontFamily(newFont);
  });

  textSizeSelect.addEventListener("change", (e) => {
    const newSize = (e.target as HTMLSelectElement).value;
    updateTextSize(newSize);
  });
</script>
