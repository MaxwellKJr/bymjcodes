---
export const prerender = true;

import { websiteDescription } from "@/exports/strings";
import Button from "@/components/buttons/Button.astro";
import Flex from "@/components/layouts/Flex.astro";
import Heading from "@/components/typography/Heading.astro";
import Layout from "@/layouts/Layout.astro";
import Text from "@/components/typography/Text.astro";

interface Occupation {
  name?: string;
  url?: string;
}

const occupations: Occupation[] = [
  {
    name: "Software Developer üíª",
    url: "https://linkedin.com/in/maxwellkjr"
  },
  {
    name: "Writer ‚úçÔ∏è",
    url: "https://malawianwriter.vercel.app"
  },
  {
    name: "Graphic Designer üé®",
    url: "https://instagram.com/maxwellkjnr"
  },
  {
    name: "Some Chess? ‚ôõ",
    url: "https://lichess.org/?user=PlayerOneMw#friend"
  }
];
---

<Layout
  title="Programming and Tech Related Content"
  description={websiteDescription}
  siteUrl="https://bymjcodes.com"
  image="/mjk.jpg"
>
  <section class="h-screen lg:h-[80vh]" transition:animate="fade">
    <div class="container flex h-full flex-col justify-center">
      <!-- TODO: Fix the half-baked glitch effect -->
      <div
        class="hover:animate-glitch before:hover:animate-glitch-delayed-1 after:hover:animate-glitch-delayed-2 group hover:text-primary relative hover:cursor-default"
        data-text={`The Developing Developer`}
      >
        <Heading
          text="The Developing Developer"
          size="xl"
          color="text-secondary"
          className="group-hover:animate-glitch-delayed-2 group-hover:after:animate-glitch-delayed-1 group-hover:text-primary transition-all duration-400"
        />
      </div>

      <div class="w-1/2 overflow-hidden pb-2">
        <hr class="border-secondary animate-line mt-4 w-full border-t-[1px]" />
      </div>
      <!-- TODO: Refactor the Flex component to make it more generic to work with simple lists list this -->
      <div class="mx-auto mt-2 flex w-full flex-wrap">
        {
          occupations &&
            occupations.map((occupation: Occupation) => (
              <a
                href={occupation.url}
                class="text-secondary-white hover:text-primary last:text-primary z-10 mr-4 py-1 transition-all duration-500 ease-in-out last:animate-pulse last:transition-colors last:hover:animate-none"
                target="_blank"
              >
                {occupation.name}
              </a>
            ))
        }
      </div>
      <div class="mt-4">
        <Text
          text="A platform to showcase my software development journey and share the few things I know."
          size="md"
        />
      </div>
      <Flex
        direction="row"
        align="start"
        justify="start"
        gap="4"
        wrap="wrap"
        className="mt-4"
      >
        <Button text="About" link="/about" variant="primary" />
        <Button text="Projects" link="/projects" variant="secondary" />
      </Flex>
    </div>
  </section>
</Layout>
